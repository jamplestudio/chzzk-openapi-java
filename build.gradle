plugins {
    id 'java'
    id 'com.gradleup.shadow' version '8.3.1'
}

group = 'com.jamplestudio'
version = '0.0.0'

repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'

    // https://mvnrepository.com/artifact/org.jetbrains/annotations
    implementation 'org.jetbrains:annotations:26.0.2'

    // https://mvnrepository.com/artifact/com.google.guava/guava
    implementation 'com.google.guava:guava:33.4.0-jre'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation 'com.google.code.gson:gson:2.12.1'

    // https://mvnrepository.com/artifact/com.github.ben-manes.caffeine/caffeine
    implementation 'com.github.ben-manes.caffeine:caffeine:3.2.0'

    // https://mvnrepository.com/artifact/io.undertow/undertow-core
    implementation 'io.undertow:undertow-core:2.3.18.Final'

    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'

    // https://github.com/cdimascio/dotenv-java
    implementation 'io.github.cdimascio:dotenv-java:3.2.0'

    // https://mvnrepository.com/artifact/io.socket/socket.io-client
    implementation 'io.socket:socket.io-client:2.0.1'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}